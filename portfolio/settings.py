"""
Django settings for portfolio project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _
from .CONFIG import (
    EMAIL_HOST_USER,
    EMAIL_HOST_PASSWORD,
    DATABASE_NAME,
    DATABASE_PORT,
    DEBUG,
    HOST,
    PASSWORD,
    SECRET_KEY,
    USER,
    DOMAIN_REGEX,
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEBUG

PAGINATION_SIZE = 10

ALLOWED_HOSTS = [
    '*'
]

# Application definition
PREREQUISITE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

PROJECT_APPS = [
    'apps.user',
    'apps.about',
    'apps.awards',
    'apps.education',
    'apps.experience',
    'apps.interests',
    'apps.root',
    'apps.skills',
    'apps.blog',
    'apps.project',
]

PACKAGES_APPS = [
    'corsheaders',
]

INSTALLED_APPS = PREREQUISITE_APPS + PROJECT_APPS + PACKAGES_APPS

MIDDLEWARE = [
    #     Cors Middleware needs to be on top
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # users can choose their language we use the locale middleware.
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'portfolio.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DATABASE_NAME,
        'USER': USER,
        'PASSWORD': PASSWORD,
        'HOST': HOST,
        'PORT': DATABASE_PORT,
        'OPTIONS': {
            # Tell MySQLdb to connect with 'utf8mb4' character set
            'init_command': 'SET innodb_strict_mode=1',
            'sql_mode': 'traditional',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGES = (
    ('en', _('English')),
    ('el', _('Greek')),
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Europe/Athens'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# specify the path of the directory and we access the media folder
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD

# CORS CONFIGURATION
DOMAIN_REGEX = DOMAIN_REGEX

CORS_ORIGIN_REGEX_WHITELIST = [
    r"(https|http)://[\w\-]*.?" + DOMAIN_REGEX + ".(com|gr){1}.*",
]

if DEBUG:
    CORS_ORIGIN_REGEX_WHITELIST = [
        r"(https|http)://[\w\-]*.?" + DOMAIN_REGEX + ".(com|gr){1}.*",
        # Debug mode (localhost / 127.0.0.1)
        r"(https|http)://[\w\-\\.:]*\d.$",
    ]


# Custom User Model
AUTH_USER_MODEL = 'user.CustomUser'

# Owner Email for the Portfolio
OWNER_EMAIL = "xarhsasi@gmail.com"
